const RESULT_LENGTH: usize = 32;

fn calculate(input: &[u8]) -> [u8; 32] {
    let bytes: [u8; 32] = [
        0xD7, 0xA8, 0xFB, 0xB3, 0x07, 0xD7, 0x80, 0x94, 
        0x69, 0xCA, 0x9A, 0xBC, 0xB0, 0x08, 0x2E, 0x4F, 
        0x8D, 0x56, 0x51, 0xE4, 0x6D, 0x3C, 0xDB, 0x76, 
        0x2D, 0x02, 0xD0, 0xBF, 0x37, 0xC9, 0xE5, 0x92
    ];
    bytes
}

#[cfg(test)]
mod tests {
    #[test]
    fn calculate() {
        let expected: [u8; 32] = [
            0xD7, 0xA8, 0xFB, 0xB3, 0x07, 0xD7, 0x80, 0x94, 
            0x69, 0xCA, 0x9A, 0xBC, 0xB0, 0x08, 0x2E, 0x4F, 
            0x8D, 0x56, 0x51, 0xE4, 0x6D, 0x3C, 0xDB, 0x76, 
            0x2D, 0x02, 0xD0, 0xBF, 0x37, 0xC9, 0xE5, 0x92
        ];
        let input = b"The quick brown fox jumps over the lazy dog";

        let result = super::calculate(input);

        for i in 0..super::RESULT_LENGTH {
            assert_eq!(result[i], expected[i]);
        }
    }
}
